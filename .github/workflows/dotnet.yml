# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET
env:
  registryName: 'ljnjit4kzcs7wwthreg.azurecr.io'
  repositoryName: 'wth/dotnetcoreapp'
  dockerFolderPath: 'Application/src/RazorPagesTestSample'
  tag: ${{ github.run_id }}
  
on:
  push:
    paths:
     - 'Application/**'
   # branches: [ "main" ]
  pull_request:
    paths:
      - 'Application/**' 
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Build
      run: dotnet build ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj --no-restore
    - name: Test
      run: dotnet test ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj --no-build --verbosity normal
  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Docker login
      run: docker login ${{ env.registryName }} -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}

    - name: Docker build
      run: docker build -t ${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }} --build-arg build_version=${{ env.tag }} ${{ env.dockerFolderPath }}

    - name: Docker push
      run: docker push ${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }}

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: 'production'
    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'ljnjit4kzcs7w-dev'
        images: '${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }}'
